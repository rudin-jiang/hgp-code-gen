#include "hgp_hrr.hpp"
#include <vector>

namespace nhfInt {

using VecReal = std::vector<double>;

VecReal hgp_hrr_4_2_(const VecReal &hrrInp, double x, double y, double z) { 
    const double *a4b0 = hrrInp.data() +  0;
    const double *a5b0 = hrrInp.data() + 15;
    const double *a6b0 = hrrInp.data() + 36;

    // intermediate arrays
    double a4b1[45];
    double a5b1[63];

    // resulted VecReal
    VecReal a4b2(90);

    a4b1[ 0] = a5b0[ 0] + z * a4b0[ 0];    // [(004)(001)] = [(005)(000)] + ABz * [(004)(000)]
    a4b1[ 1] = a5b0[ 1] + y * a4b0[ 0];    // [(004)(010)] = [(014)(000)] + ABy * [(004)(000)]
    a4b1[ 2] = a5b0[ 6] + x * a4b0[ 0];    // [(004)(100)] = [(104)(000)] + ABx * [(004)(000)]
    a4b1[ 3] = a5b0[ 1] + z * a4b0[ 1];    // [(013)(001)] = [(014)(000)] + ABz * [(013)(000)]
    a4b1[ 4] = a5b0[ 2] + y * a4b0[ 1];    // [(013)(010)] = [(023)(000)] + ABy * [(013)(000)]
    a4b1[ 5] = a5b0[ 7] + x * a4b0[ 1];    // [(013)(100)] = [(113)(000)] + ABx * [(013)(000)]
    a4b1[ 6] = a5b0[ 2] + z * a4b0[ 2];    // [(022)(001)] = [(023)(000)] + ABz * [(022)(000)]
    a4b1[ 7] = a5b0[ 3] + y * a4b0[ 2];    // [(022)(010)] = [(032)(000)] + ABy * [(022)(000)]
    a4b1[ 8] = a5b0[ 8] + x * a4b0[ 2];    // [(022)(100)] = [(122)(000)] + ABx * [(022)(000)]
    a4b1[ 9] = a5b0[ 3] + z * a4b0[ 3];    // [(031)(001)] = [(032)(000)] + ABz * [(031)(000)]
    a4b1[10] = a5b0[ 4] + y * a4b0[ 3];    // [(031)(010)] = [(041)(000)] + ABy * [(031)(000)]
    a4b1[11] = a5b0[ 9] + x * a4b0[ 3];    // [(031)(100)] = [(131)(000)] + ABx * [(031)(000)]
    a4b1[12] = a5b0[ 4] + z * a4b0[ 4];    // [(040)(001)] = [(041)(000)] + ABz * [(040)(000)]
    a4b1[13] = a5b0[ 5] + y * a4b0[ 4];    // [(040)(010)] = [(050)(000)] + ABy * [(040)(000)]
    a4b1[14] = a5b0[10] + x * a4b0[ 4];    // [(040)(100)] = [(140)(000)] + ABx * [(040)(000)]
    a4b1[15] = a5b0[ 6] + z * a4b0[ 5];    // [(103)(001)] = [(104)(000)] + ABz * [(103)(000)]
    a4b1[16] = a5b0[ 7] + y * a4b0[ 5];    // [(103)(010)] = [(113)(000)] + ABy * [(103)(000)]
    a4b1[17] = a5b0[11] + x * a4b0[ 5];    // [(103)(100)] = [(203)(000)] + ABx * [(103)(000)]
    a4b1[18] = a5b0[ 7] + z * a4b0[ 6];    // [(112)(001)] = [(113)(000)] + ABz * [(112)(000)]
    a4b1[19] = a5b0[ 8] + y * a4b0[ 6];    // [(112)(010)] = [(122)(000)] + ABy * [(112)(000)]
    a4b1[20] = a5b0[12] + x * a4b0[ 6];    // [(112)(100)] = [(212)(000)] + ABx * [(112)(000)]
    a4b1[21] = a5b0[ 8] + z * a4b0[ 7];    // [(121)(001)] = [(122)(000)] + ABz * [(121)(000)]
    a4b1[22] = a5b0[ 9] + y * a4b0[ 7];    // [(121)(010)] = [(131)(000)] + ABy * [(121)(000)]
    a4b1[23] = a5b0[13] + x * a4b0[ 7];    // [(121)(100)] = [(221)(000)] + ABx * [(121)(000)]
    a4b1[24] = a5b0[ 9] + z * a4b0[ 8];    // [(130)(001)] = [(131)(000)] + ABz * [(130)(000)]
    a4b1[25] = a5b0[10] + y * a4b0[ 8];    // [(130)(010)] = [(140)(000)] + ABy * [(130)(000)]
    a4b1[26] = a5b0[14] + x * a4b0[ 8];    // [(130)(100)] = [(230)(000)] + ABx * [(130)(000)]
    a4b1[27] = a5b0[11] + z * a4b0[ 9];    // [(202)(001)] = [(203)(000)] + ABz * [(202)(000)]
    a4b1[28] = a5b0[12] + y * a4b0[ 9];    // [(202)(010)] = [(212)(000)] + ABy * [(202)(000)]
    a4b1[29] = a5b0[15] + x * a4b0[ 9];    // [(202)(100)] = [(302)(000)] + ABx * [(202)(000)]
    a4b1[30] = a5b0[12] + z * a4b0[10];    // [(211)(001)] = [(212)(000)] + ABz * [(211)(000)]
    a4b1[31] = a5b0[13] + y * a4b0[10];    // [(211)(010)] = [(221)(000)] + ABy * [(211)(000)]
    a4b1[32] = a5b0[16] + x * a4b0[10];    // [(211)(100)] = [(311)(000)] + ABx * [(211)(000)]
    a4b1[33] = a5b0[13] + z * a4b0[11];    // [(220)(001)] = [(221)(000)] + ABz * [(220)(000)]
    a4b1[34] = a5b0[14] + y * a4b0[11];    // [(220)(010)] = [(230)(000)] + ABy * [(220)(000)]
    a4b1[35] = a5b0[17] + x * a4b0[11];    // [(220)(100)] = [(320)(000)] + ABx * [(220)(000)]
    a4b1[36] = a5b0[15] + z * a4b0[12];    // [(301)(001)] = [(302)(000)] + ABz * [(301)(000)]
    a4b1[37] = a5b0[16] + y * a4b0[12];    // [(301)(010)] = [(311)(000)] + ABy * [(301)(000)]
    a4b1[38] = a5b0[18] + x * a4b0[12];    // [(301)(100)] = [(401)(000)] + ABx * [(301)(000)]
    a4b1[39] = a5b0[16] + z * a4b0[13];    // [(310)(001)] = [(311)(000)] + ABz * [(310)(000)]
    a4b1[40] = a5b0[17] + y * a4b0[13];    // [(310)(010)] = [(320)(000)] + ABy * [(310)(000)]
    a4b1[41] = a5b0[19] + x * a4b0[13];    // [(310)(100)] = [(410)(000)] + ABx * [(310)(000)]
    a4b1[42] = a5b0[18] + z * a4b0[14];    // [(400)(001)] = [(401)(000)] + ABz * [(400)(000)]
    a4b1[43] = a5b0[19] + y * a4b0[14];    // [(400)(010)] = [(410)(000)] + ABy * [(400)(000)]
    a4b1[44] = a5b0[20] + x * a4b0[14];    // [(400)(100)] = [(500)(000)] + ABx * [(400)(000)]
    a5b1[ 0] = a6b0[ 0] + z * a5b0[ 0];    // [(005)(001)] = [(006)(000)] + ABz * [(005)(000)]
    a5b1[ 3] = a6b0[ 1] + z * a5b0[ 1];    // [(014)(001)] = [(015)(000)] + ABz * [(014)(000)]
    a5b1[ 4] = a6b0[ 2] + y * a5b0[ 1];    // [(014)(010)] = [(024)(000)] + ABy * [(014)(000)]
    a5b1[ 5] = a6b0[ 8] + x * a5b0[ 1];    // [(014)(100)] = [(114)(000)] + ABx * [(014)(000)]
    a5b1[ 6] = a6b0[ 2] + z * a5b0[ 2];    // [(023)(001)] = [(024)(000)] + ABz * [(023)(000)]
    a5b1[ 7] = a6b0[ 3] + y * a5b0[ 2];    // [(023)(010)] = [(033)(000)] + ABy * [(023)(000)]
    a5b1[ 9] = a6b0[ 3] + z * a5b0[ 3];    // [(032)(001)] = [(033)(000)] + ABz * [(032)(000)]
    a5b1[10] = a6b0[ 4] + y * a5b0[ 3];    // [(032)(010)] = [(042)(000)] + ABy * [(032)(000)]
    a5b1[11] = a6b0[10] + x * a5b0[ 3];    // [(032)(100)] = [(132)(000)] + ABx * [(032)(000)]
    a5b1[12] = a6b0[ 4] + z * a5b0[ 4];    // [(041)(001)] = [(042)(000)] + ABz * [(041)(000)]
    a5b1[13] = a6b0[ 5] + y * a5b0[ 4];    // [(041)(010)] = [(051)(000)] + ABy * [(041)(000)]
    a5b1[14] = a6b0[11] + x * a5b0[ 4];    // [(041)(100)] = [(141)(000)] + ABx * [(041)(000)]
    a5b1[16] = a6b0[ 6] + y * a5b0[ 5];    // [(050)(010)] = [(060)(000)] + ABy * [(050)(000)]
    a5b1[18] = a6b0[ 7] + z * a5b0[ 6];    // [(104)(001)] = [(105)(000)] + ABz * [(104)(000)]
    a5b1[20] = a6b0[13] + x * a5b0[ 6];    // [(104)(100)] = [(204)(000)] + ABx * [(104)(000)]
    a5b1[21] = a6b0[ 8] + z * a5b0[ 7];    // [(113)(001)] = [(114)(000)] + ABz * [(113)(000)]
    a5b1[22] = a6b0[ 9] + y * a5b0[ 7];    // [(113)(010)] = [(123)(000)] + ABy * [(113)(000)]
    a5b1[23] = a6b0[14] + x * a5b0[ 7];    // [(113)(100)] = [(213)(000)] + ABx * [(113)(000)]
    a5b1[24] = a6b0[ 9] + z * a5b0[ 8];    // [(122)(001)] = [(123)(000)] + ABz * [(122)(000)]
    a5b1[25] = a6b0[10] + y * a5b0[ 8];    // [(122)(010)] = [(132)(000)] + ABy * [(122)(000)]
    a5b1[26] = a6b0[15] + x * a5b0[ 8];    // [(122)(100)] = [(222)(000)] + ABx * [(122)(000)]
    a5b1[27] = a6b0[10] + z * a5b0[ 9];    // [(131)(001)] = [(132)(000)] + ABz * [(131)(000)]
    a5b1[28] = a6b0[11] + y * a5b0[ 9];    // [(131)(010)] = [(141)(000)] + ABy * [(131)(000)]
    a5b1[29] = a6b0[16] + x * a5b0[ 9];    // [(131)(100)] = [(231)(000)] + ABx * [(131)(000)]
    a5b1[31] = a6b0[12] + y * a5b0[10];    // [(140)(010)] = [(150)(000)] + ABy * [(140)(000)]
    a5b1[32] = a6b0[17] + x * a5b0[10];    // [(140)(100)] = [(240)(000)] + ABx * [(140)(000)]
    a5b1[33] = a6b0[13] + z * a5b0[11];    // [(203)(001)] = [(204)(000)] + ABz * [(203)(000)]
    a5b1[35] = a6b0[18] + x * a5b0[11];    // [(203)(100)] = [(303)(000)] + ABx * [(203)(000)]
    a5b1[36] = a6b0[14] + z * a5b0[12];    // [(212)(001)] = [(213)(000)] + ABz * [(212)(000)]
    a5b1[37] = a6b0[15] + y * a5b0[12];    // [(212)(010)] = [(222)(000)] + ABy * [(212)(000)]
    a5b1[38] = a6b0[19] + x * a5b0[12];    // [(212)(100)] = [(312)(000)] + ABx * [(212)(000)]
    a5b1[39] = a6b0[15] + z * a5b0[13];    // [(221)(001)] = [(222)(000)] + ABz * [(221)(000)]
    a5b1[40] = a6b0[16] + y * a5b0[13];    // [(221)(010)] = [(231)(000)] + ABy * [(221)(000)]
    a5b1[41] = a6b0[20] + x * a5b0[13];    // [(221)(100)] = [(321)(000)] + ABx * [(221)(000)]
    a5b1[43] = a6b0[17] + y * a5b0[14];    // [(230)(010)] = [(240)(000)] + ABy * [(230)(000)]
    a5b1[44] = a6b0[21] + x * a5b0[14];    // [(230)(100)] = [(330)(000)] + ABx * [(230)(000)]
    a5b1[45] = a6b0[18] + z * a5b0[15];    // [(302)(001)] = [(303)(000)] + ABz * [(302)(000)]
    a5b1[47] = a6b0[22] + x * a5b0[15];    // [(302)(100)] = [(402)(000)] + ABx * [(302)(000)]
    a5b1[48] = a6b0[19] + z * a5b0[16];    // [(311)(001)] = [(312)(000)] + ABz * [(311)(000)]
    a5b1[49] = a6b0[20] + y * a5b0[16];    // [(311)(010)] = [(321)(000)] + ABy * [(311)(000)]
    a5b1[50] = a6b0[23] + x * a5b0[16];    // [(311)(100)] = [(411)(000)] + ABx * [(311)(000)]
    a5b1[51] = a6b0[20] + z * a5b0[17];    // [(320)(001)] = [(321)(000)] + ABz * [(320)(000)]
    a5b1[52] = a6b0[21] + y * a5b0[17];    // [(320)(010)] = [(330)(000)] + ABy * [(320)(000)]
    a5b1[53] = a6b0[24] + x * a5b0[17];    // [(320)(100)] = [(420)(000)] + ABx * [(320)(000)]
    a5b1[54] = a6b0[22] + z * a5b0[18];    // [(401)(001)] = [(402)(000)] + ABz * [(401)(000)]
    a5b1[56] = a6b0[25] + x * a5b0[18];    // [(401)(100)] = [(501)(000)] + ABx * [(401)(000)]
    a5b1[57] = a6b0[23] + z * a5b0[19];    // [(410)(001)] = [(411)(000)] + ABz * [(410)(000)]
    a5b1[58] = a6b0[24] + y * a5b0[19];    // [(410)(010)] = [(420)(000)] + ABy * [(410)(000)]
    a5b1[59] = a6b0[26] + x * a5b0[19];    // [(410)(100)] = [(510)(000)] + ABx * [(410)(000)]
    a5b1[62] = a6b0[27] + x * a5b0[20];    // [(500)(100)] = [(600)(000)] + ABx * [(500)(000)]
    a4b2[ 0] = a5b1[ 0] + z * a4b1[ 0];    // [(004)(002)] = [(005)(001)] + ABz * [(004)(001)]
    a4b2[ 1] = a5b1[ 3] + y * a4b1[ 0];    // [(004)(011)] = [(014)(001)] + ABy * [(004)(001)]
    a4b2[ 2] = a5b1[ 4] + y * a4b1[ 1];    // [(004)(020)] = [(014)(010)] + ABy * [(004)(010)]
    a4b2[ 3] = a5b1[18] + x * a4b1[ 0];    // [(004)(101)] = [(104)(001)] + ABx * [(004)(001)]
    a4b2[ 4] = a5b1[ 5] + y * a4b1[ 2];    // [(004)(110)] = [(014)(100)] + ABy * [(004)(100)]
    a4b2[ 5] = a5b1[20] + x * a4b1[ 2];    // [(004)(200)] = [(104)(100)] + ABx * [(004)(100)]
    a4b2[ 6] = a5b1[ 3] + z * a4b1[ 3];    // [(013)(002)] = [(014)(001)] + ABz * [(013)(001)]
    a4b2[ 7] = a5b1[ 6] + y * a4b1[ 3];    // [(013)(011)] = [(023)(001)] + ABy * [(013)(001)]
    a4b2[ 8] = a5b1[ 7] + y * a4b1[ 4];    // [(013)(020)] = [(023)(010)] + ABy * [(013)(010)]
    a4b2[ 9] = a5b1[21] + x * a4b1[ 3];    // [(013)(101)] = [(113)(001)] + ABx * [(013)(001)]
    a4b2[10] = a5b1[22] + x * a4b1[ 4];    // [(013)(110)] = [(113)(010)] + ABx * [(013)(010)]
    a4b2[11] = a5b1[23] + x * a4b1[ 5];    // [(013)(200)] = [(113)(100)] + ABx * [(013)(100)]
    a4b2[12] = a5b1[ 6] + z * a4b1[ 6];    // [(022)(002)] = [(023)(001)] + ABz * [(022)(001)]
    a4b2[13] = a5b1[ 9] + y * a4b1[ 6];    // [(022)(011)] = [(032)(001)] + ABy * [(022)(001)]
    a4b2[14] = a5b1[10] + y * a4b1[ 7];    // [(022)(020)] = [(032)(010)] + ABy * [(022)(010)]
    a4b2[15] = a5b1[24] + x * a4b1[ 6];    // [(022)(101)] = [(122)(001)] + ABx * [(022)(001)]
    a4b2[16] = a5b1[25] + x * a4b1[ 7];    // [(022)(110)] = [(122)(010)] + ABx * [(022)(010)]
    a4b2[17] = a5b1[26] + x * a4b1[ 8];    // [(022)(200)] = [(122)(100)] + ABx * [(022)(100)]
    a4b2[18] = a5b1[ 9] + z * a4b1[ 9];    // [(031)(002)] = [(032)(001)] + ABz * [(031)(001)]
    a4b2[19] = a5b1[12] + y * a4b1[ 9];    // [(031)(011)] = [(041)(001)] + ABy * [(031)(001)]
    a4b2[20] = a5b1[13] + y * a4b1[10];    // [(031)(020)] = [(041)(010)] + ABy * [(031)(010)]
    a4b2[21] = a5b1[27] + x * a4b1[ 9];    // [(031)(101)] = [(131)(001)] + ABx * [(031)(001)]
    a4b2[22] = a5b1[28] + x * a4b1[10];    // [(031)(110)] = [(131)(010)] + ABx * [(031)(010)]
    a4b2[23] = a5b1[29] + x * a4b1[11];    // [(031)(200)] = [(131)(100)] + ABx * [(031)(100)]
    a4b2[24] = a5b1[12] + z * a4b1[12];    // [(040)(002)] = [(041)(001)] + ABz * [(040)(001)]
    a4b2[25] = a5b1[13] + z * a4b1[13];    // [(040)(011)] = [(041)(010)] + ABz * [(040)(010)]
    a4b2[26] = a5b1[16] + y * a4b1[13];    // [(040)(020)] = [(050)(010)] + ABy * [(040)(010)]
    a4b2[27] = a5b1[14] + z * a4b1[14];    // [(040)(101)] = [(041)(100)] + ABz * [(040)(100)]
    a4b2[28] = a5b1[31] + x * a4b1[13];    // [(040)(110)] = [(140)(010)] + ABx * [(040)(010)]
    a4b2[29] = a5b1[32] + x * a4b1[14];    // [(040)(200)] = [(140)(100)] + ABx * [(040)(100)]
    a4b2[30] = a5b1[18] + z * a4b1[15];    // [(103)(002)] = [(104)(001)] + ABz * [(103)(001)]
    a4b2[31] = a5b1[21] + y * a4b1[15];    // [(103)(011)] = [(113)(001)] + ABy * [(103)(001)]
    a4b2[32] = a5b1[22] + y * a4b1[16];    // [(103)(020)] = [(113)(010)] + ABy * [(103)(010)]
    a4b2[33] = a5b1[33] + x * a4b1[15];    // [(103)(101)] = [(203)(001)] + ABx * [(103)(001)]
    a4b2[34] = a5b1[23] + y * a4b1[17];    // [(103)(110)] = [(113)(100)] + ABy * [(103)(100)]
    a4b2[35] = a5b1[35] + x * a4b1[17];    // [(103)(200)] = [(203)(100)] + ABx * [(103)(100)]
    a4b2[36] = a5b1[21] + z * a4b1[18];    // [(112)(002)] = [(113)(001)] + ABz * [(112)(001)]
    a4b2[37] = a5b1[24] + y * a4b1[18];    // [(112)(011)] = [(122)(001)] + ABy * [(112)(001)]
    a4b2[38] = a5b1[25] + y * a4b1[19];    // [(112)(020)] = [(122)(010)] + ABy * [(112)(010)]
    a4b2[39] = a5b1[36] + x * a4b1[18];    // [(112)(101)] = [(212)(001)] + ABx * [(112)(001)]
    a4b2[40] = a5b1[37] + x * a4b1[19];    // [(112)(110)] = [(212)(010)] + ABx * [(112)(010)]
    a4b2[41] = a5b1[38] + x * a4b1[20];    // [(112)(200)] = [(212)(100)] + ABx * [(112)(100)]
    a4b2[42] = a5b1[24] + z * a4b1[21];    // [(121)(002)] = [(122)(001)] + ABz * [(121)(001)]
    a4b2[43] = a5b1[27] + y * a4b1[21];    // [(121)(011)] = [(131)(001)] + ABy * [(121)(001)]
    a4b2[44] = a5b1[28] + y * a4b1[22];    // [(121)(020)] = [(131)(010)] + ABy * [(121)(010)]
    a4b2[45] = a5b1[39] + x * a4b1[21];    // [(121)(101)] = [(221)(001)] + ABx * [(121)(001)]
    a4b2[46] = a5b1[40] + x * a4b1[22];    // [(121)(110)] = [(221)(010)] + ABx * [(121)(010)]
    a4b2[47] = a5b1[41] + x * a4b1[23];    // [(121)(200)] = [(221)(100)] + ABx * [(121)(100)]
    a4b2[48] = a5b1[27] + z * a4b1[24];    // [(130)(002)] = [(131)(001)] + ABz * [(130)(001)]
    a4b2[49] = a5b1[28] + z * a4b1[25];    // [(130)(011)] = [(131)(010)] + ABz * [(130)(010)]
    a4b2[50] = a5b1[31] + y * a4b1[25];    // [(130)(020)] = [(140)(010)] + ABy * [(130)(010)]
    a4b2[51] = a5b1[29] + z * a4b1[26];    // [(130)(101)] = [(131)(100)] + ABz * [(130)(100)]
    a4b2[52] = a5b1[43] + x * a4b1[25];    // [(130)(110)] = [(230)(010)] + ABx * [(130)(010)]
    a4b2[53] = a5b1[44] + x * a4b1[26];    // [(130)(200)] = [(230)(100)] + ABx * [(130)(100)]
    a4b2[54] = a5b1[33] + z * a4b1[27];    // [(202)(002)] = [(203)(001)] + ABz * [(202)(001)]
    a4b2[55] = a5b1[36] + y * a4b1[27];    // [(202)(011)] = [(212)(001)] + ABy * [(202)(001)]
    a4b2[56] = a5b1[37] + y * a4b1[28];    // [(202)(020)] = [(212)(010)] + ABy * [(202)(010)]
    a4b2[57] = a5b1[45] + x * a4b1[27];    // [(202)(101)] = [(302)(001)] + ABx * [(202)(001)]
    a4b2[58] = a5b1[38] + y * a4b1[29];    // [(202)(110)] = [(212)(100)] + ABy * [(202)(100)]
    a4b2[59] = a5b1[47] + x * a4b1[29];    // [(202)(200)] = [(302)(100)] + ABx * [(202)(100)]
    a4b2[60] = a5b1[36] + z * a4b1[30];    // [(211)(002)] = [(212)(001)] + ABz * [(211)(001)]
    a4b2[61] = a5b1[39] + y * a4b1[30];    // [(211)(011)] = [(221)(001)] + ABy * [(211)(001)]
    a4b2[62] = a5b1[40] + y * a4b1[31];    // [(211)(020)] = [(221)(010)] + ABy * [(211)(010)]
    a4b2[63] = a5b1[48] + x * a4b1[30];    // [(211)(101)] = [(311)(001)] + ABx * [(211)(001)]
    a4b2[64] = a5b1[49] + x * a4b1[31];    // [(211)(110)] = [(311)(010)] + ABx * [(211)(010)]
    a4b2[65] = a5b1[50] + x * a4b1[32];    // [(211)(200)] = [(311)(100)] + ABx * [(211)(100)]
    a4b2[66] = a5b1[39] + z * a4b1[33];    // [(220)(002)] = [(221)(001)] + ABz * [(220)(001)]
    a4b2[67] = a5b1[40] + z * a4b1[34];    // [(220)(011)] = [(221)(010)] + ABz * [(220)(010)]
    a4b2[68] = a5b1[43] + y * a4b1[34];    // [(220)(020)] = [(230)(010)] + ABy * [(220)(010)]
    a4b2[69] = a5b1[51] + x * a4b1[33];    // [(220)(101)] = [(320)(001)] + ABx * [(220)(001)]
    a4b2[70] = a5b1[52] + x * a4b1[34];    // [(220)(110)] = [(320)(010)] + ABx * [(220)(010)]
    a4b2[71] = a5b1[53] + x * a4b1[35];    // [(220)(200)] = [(320)(100)] + ABx * [(220)(100)]
    a4b2[72] = a5b1[45] + z * a4b1[36];    // [(301)(002)] = [(302)(001)] + ABz * [(301)(001)]
    a4b2[73] = a5b1[48] + y * a4b1[36];    // [(301)(011)] = [(311)(001)] + ABy * [(301)(001)]
    a4b2[74] = a5b1[49] + y * a4b1[37];    // [(301)(020)] = [(311)(010)] + ABy * [(301)(010)]
    a4b2[75] = a5b1[54] + x * a4b1[36];    // [(301)(101)] = [(401)(001)] + ABx * [(301)(001)]
    a4b2[76] = a5b1[50] + y * a4b1[38];    // [(301)(110)] = [(311)(100)] + ABy * [(301)(100)]
    a4b2[77] = a5b1[56] + x * a4b1[38];    // [(301)(200)] = [(401)(100)] + ABx * [(301)(100)]
    a4b2[78] = a5b1[48] + z * a4b1[39];    // [(310)(002)] = [(311)(001)] + ABz * [(310)(001)]
    a4b2[79] = a5b1[51] + y * a4b1[39];    // [(310)(011)] = [(320)(001)] + ABy * [(310)(001)]
    a4b2[80] = a5b1[52] + y * a4b1[40];    // [(310)(020)] = [(320)(010)] + ABy * [(310)(010)]
    a4b2[81] = a5b1[57] + x * a4b1[39];    // [(310)(101)] = [(410)(001)] + ABx * [(310)(001)]
    a4b2[82] = a5b1[58] + x * a4b1[40];    // [(310)(110)] = [(410)(010)] + ABx * [(310)(010)]
    a4b2[83] = a5b1[59] + x * a4b1[41];    // [(310)(200)] = [(410)(100)] + ABx * [(310)(100)]
    a4b2[84] = a5b1[54] + z * a4b1[42];    // [(400)(002)] = [(401)(001)] + ABz * [(400)(001)]
    a4b2[85] = a5b1[57] + y * a4b1[42];    // [(400)(011)] = [(410)(001)] + ABy * [(400)(001)]
    a4b2[86] = a5b1[58] + y * a4b1[43];    // [(400)(020)] = [(410)(010)] + ABy * [(400)(010)]
    a4b2[87] = a5b1[56] + z * a4b1[44];    // [(400)(101)] = [(401)(100)] + ABz * [(400)(100)]
    a4b2[88] = a5b1[59] + y * a4b1[44];    // [(400)(110)] = [(410)(100)] + ABy * [(400)(100)]
    a4b2[89] = a5b1[62] + x * a4b1[44];    // [(400)(200)] = [(500)(100)] + ABx * [(400)(100)]

    return a4b2;

}  // function (hgp_hrr_4_2_)

}  // namespace (nhfInt)

